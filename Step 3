---
title: "Step-3"
author: "Liuqian Bao"
date: "2023-11-21"
output: html_document
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
library("skimr")
library("dplyr")
options(max.print=1000000)
library("readxl")
library("ggplot2")
# load packages
library("tidyverse")
library("tidymodels")
library("modelr")
library("ggplot2")
library("GGally")
train <- read_excel("C:/Users/baoli/Desktop/PSTAT126/Project/house-prices-advanced-regression-techniques/train.xlsx") 
```

```{r include=FALSE}
# Variable Selection
h1 <- subset(train, select = -c(MSSubClass, OverallCond, BsmtFinSF2, LowQualFinSF, BsmtHalfBath, YrSold, MoSold, MiscVal, PoolArea, ScreenPorch, EnclosedPorch, KitchenAbvGr, BedroomAbvGr, Street, Alley, Utilities, LandSlope, RoofMatl, BsmtExposure, Heating, CentralAir, MiscFeature, Fence, PoolQC, LandContour,BldgType, Exterior2nd, GarageQual, GarageCond, PavedDrive, SaleType, SaleCondition, GrLivArea, OverallQual, TotalBsmtSF, WoodDeckSF, GarageArea, Fireplaces, TotRmsAbvGrd, MSZoning, Functional, MasVnrArea, GarageYrBlt, YearBuilt, YearRemodAdd))

h2 <- subset(train, select = c(SalePrice, LotArea, GarageCars, BsmtFinSF1, FullBath, ExterQual, HouseStyle, OpenPorchSF, HalfBath, KitchenQual, GarageFinish))
```

```{r echo=F}
# randomly choose 500 observations
set.seed(12345)

h2_500 <- h2[sample(1:1460, 500, replace = FALSE),]
h2_partition <- h2_500 %>% resample_partition(p = c(train = 0.7, test = 0.3)) ##fit model
h3_500 <- subset(h2_500, select = c(SalePrice, LotArea, GarageCars, BsmtFinSF1, FullBath, ExterQual)) ##pairplot
h4_500 <- subset(h2_500, select = c(HouseStyle, OpenPorchSF, HalfBath, KitchenQual, GarageFinish)) ##pairplot
```

```{r}
ggpairs(train3_500)
ggpairs(train4_500)

# plot(pairplot[2,1])
# plot(pairplot[2,2])
# plot(pairplot[2,3])
# plot(pairplot[2,4])
# plot(pairplot[2,5])
# plot(pairplot[2,6])
# plot(pairplot[2,7])
# plot(pairplot[2,8])
# plot(pairplot[2,9])
# plot(pairplot[2,10])
```
## Computational Models
First computational model: all of our quantitative variables.
```{r}
fitComp1 <- lm(log(SalePrice) ~ LotArea + GarageCars + BsmtFinSF1 + FullBath + OpenPorchSF + HalfBath, data = h2_partition$train)
summary(fitComp1)
```

```{r, echo=F, fig.width=8, fig.height=8, fig.cap="Residual vs. fitted and BsmtFinSF1"}
# panel of residual plots
augment(fitComp1, h2_partition$train) %>%
  pivot_longer(cols = c(.fitted, LotArea, GarageCars, BsmtFinSF1, FullBath, OpenPorchSF, HalfBath)) %>%
  ggplot(aes(y = .resid, x = value)) +
  facet_wrap(~ name, scales = 'free_x') +
  geom_point() +
  geom_hline(aes(yintercept = 0)) +
  geom_smooth(method = 'loess', formula = 'y ~ x', se = F, span = 1)
```

We tranformed SalePrice with a log function to make the variance more constant. 

Second computational model: we used GarageCars because it looked like it had high correlation, and KitchenQual becuase we wanted to test a highly correlated categorical variable. 

```{r}
fitComp2 <- lm(log(SalePrice) ~ GarageCars + KitchenQual, data = h2_partition$train)
summary(fitComp2)
```

We tranformed SalePrice with a log function to make the variance more constant.

## Anova to Cross Validate

```{r}
anova(fitComp1, fitComp2)
```

(we can also compare r^2 values)


#### Statistical model

```{r}
model_null = lm(SalePrice ~ 1, data = h2_partition$train)
model_full = lm(SalePrice ~ ., data = h2_partition$train)
# need to specify the scope of models to be examined
stats::step(model_full, direction="backward", test="F")
```

```{r}
stats::step(model_null, direction="forward", scope=list(upper=model_full, lower=model_null))
```

