---
title: "Step4Shrinkage"
author: "Liuqian Bao, Stella Ramirez, Andrew Cheng"
date: "2023-10-27"
output:
  pdf_document: default
  html_document: default
editor_options: 
  markdown: 
    wrap: sentence
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
# load packages
library(tidyverse)
library(tidymodels)
library(modelr)
install.packages("glmnet")
library(glmnet)
```

```{r, include=FALSE}
library("skimr")
library("dplyr")
options(max.print=1000000)
library(readxl)
library(ggplot2)
train <- read_excel("C:/Users/baoli/Desktop/PSTAT126/Project/house-prices-advanced-regression-techniques/train.xlsx")
```


```{r include=FALSE}
# Variable Selection
h1 <- subset(train, select = -c(MSSubClass, OverallCond, BsmtFinSF2, LowQualFinSF, BsmtHalfBath, YrSold, MoSold, MiscVal, PoolArea, ScreenPorch, EnclosedPorch, KitchenAbvGr, BedroomAbvGr, Street, Alley, Utilities, LandSlope, RoofMatl, BsmtExposure, Heating, CentralAir, MiscFeature, Fence, PoolQC, LandContour,BldgType, Exterior2nd, GarageQual, GarageCond, PavedDrive, SaleType, SaleCondition, GrLivArea, OverallQual, TotalBsmtSF, WoodDeckSF, GarageArea, Fireplaces, TotRmsAbvGrd, MSZoning, Functional, MasVnrArea, GarageYrBlt, YearBuilt, YearRemodAdd))

h2 <- subset(train, select = c(SalePrice, LotArea, GarageCars, BsmtFinSF1, FullBath, ExterQual, HouseStyle, OpenPorchSF, HalfBath, KitchenQual, GarageFinish))
```

```{r}
require(MASS)
#h2 <- scale((h2), center=TRUE, scale=FALSE)
#h2 <- as.data.frame(h2)
rgmod <- lm.ridge(SalePrice ~ ., h2, lambda = seq(0,100,len=100))
matplot(rgmod$lambda, coef(rgmod), xlab = "lambda", ylab = "Beta hat", cex=0.8)
```

####Check Eigen Decomposition of x^Tx:

```{r}
lmod <- lm(log(SalePrice) ~ ., h2)
#summary(lmod)$coefficients
x <- model.matrix(lmod)[,-1]
lambda <- eigen(crossprod(x))$val
sqrt(lambda[1]/lambda)
```



####Finding Optimal Lambda

```{r}
require(glmnet)
y <- h2$SalePrice
x1 <- scale(data.matrix(h2[,-4]))
cv_model <- cv.glmnet(x1, y, alpha = 1)
#finding optimal lambda
best_lambda <- cv_model$lambda.min
best_lambda
```

```{r}
plot(cv_model, cex=0.8)
```
####Find Coefficients of Best Model

```{r}
best_model <- glmnet(x1, y, alpha = 1, lambda = best_lambda)
coef(best_model)
```

####Plot Best Coefficients

```{r}
plot(coef(best_model), type="h", xlab="index", ylab="Coefficient", cex=0.8)
```
